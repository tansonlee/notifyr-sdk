{"version":3,"file":"index.js","sources":["../src/interface.ts","../src/constants.ts","../src/lib/storage.ts","../src/lib/authenticate.ts","../src/lib/authFetch.ts","../src/lib/getNotifications.ts","../src/components/NotificationMenu.tsx","../src/lib/insertNotification.ts","../src/classes/Notifyr.ts"],"sourcesContent":["export type NotificationFragment = {\n\tid: string;\n\tuser_id: string;\n\ttitle: string;\n\tbody: string;\n\ttype: NotificationType;\n\tcreated_at: string;\n\tupdated_at: string;\n\tgroup_id: string;\n\tlink?: string;\n};\n\nexport enum NotificationType {\n\tINFO = 'INFO',\n\tSUCCESS = 'SUCCESS',\n\tWARNING = 'WARNING',\n\tERROR = 'ERROR',\n}\n\nexport enum NotificationDropdownPosition {\n\tLEFT = 'LEFT',\n\tCENTER = 'CENTER',\n\tRIGHT = 'RIGHT',\n}\n","export const api_endpoint = 'https://notifyr.vercel.app';\n","export const storeUserToken = (token: string) => {\n\tlocalStorage.setItem('userToken', token);\n};\n\nexport const getUserToken = () => {\n\treturn localStorage.getItem('userToken');\n};\n","import { api_endpoint } from '../constants';\nimport { getUserToken, storeUserToken } from './storage';\n\nexport const authenticate = async (apiKey: string) => {\n\tconst currentToken = getUserToken();\n\n\t// Already authenticated.\n\tif (currentToken) {\n\t\treturn;\n\t}\n\n\t// Get the token from the server.\n\tconst response = await fetch(`${api_endpoint}/api/auth/get-token`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\tapiKey,\n\t\t}),\n\t});\n\n\tconst { token, error } = await response.json();\n\n\tif (error) {\n\t\tconsole.error(error);\n\t\treturn;\n\t}\n\n\tstoreUserToken(token);\n};\n","import { getUserToken } from './storage';\n\nexport const authFetchUser = async ({\n\tendpoint,\n\tbody,\n\tmethod,\n}: {\n\tendpoint: string;\n\tmethod: string;\n\tbody?: any;\n}) => {\n\tconst token = getUserToken();\n\tif (!token) {\n\t\treturn null;\n\t}\n\n\tconst headers = {\n\t\t'Content-Type': 'application/json',\n\t\tAuthorization: `Bearer ${token}`,\n\t};\n\n\tconsole.log('fetch params are', endpoint, {\n\t\tmethod,\n\t\theaders,\n\t\tbody: JSON.stringify(body),\n\t});\n\n\tconst response = await fetch(endpoint, {\n\t\tmethod,\n\t\theaders,\n\t\tbody: JSON.stringify(body),\n\t});\n\n\treturn await response.json();\n};\n","import { api_endpoint } from '../constants';\nimport { authenticate } from './authenticate';\nimport { authFetchUser } from './authFetch';\n\nexport const getNotificationsByGroupId = async ({\n\tapiKey,\n\tgroupId,\n}: {\n\tgroupId: string;\n\tapiKey: string;\n}) => {\n\tawait authenticate(apiKey);\n\tconst { notifications, errors } = await authFetchUser({\n\t\tendpoint: `${api_endpoint}/api/notification/get-notifications?groupId=${groupId}`,\n\t\tmethod: 'GET',\n\t});\n\tif (errors) {\n\t\tconsole.error(errors);\n\t\treturn [];\n\t}\n\n\treturn notifications;\n};\n\nexport const getNotificationsByClientSecret = async ({\n\tclientSecret,\n}: {\n\tclientSecret: string;\n}) => {\n\tconst response = await fetch(`${api_endpoint}/api/auth/decode-token`, {\n\t\tmethod: 'POST',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\tclientSecret,\n\t\t}),\n\t});\n\tconst { groupId, apiKey } = await response.json();\n\n\tconsole.log('got rhe groupid and the api key', groupId, apiKey);\n\n\tawait authenticate(apiKey);\n\tconst { notifications, errors } = await authFetchUser({\n\t\tendpoint: `${api_endpoint}/api/notification/get-notifications?groupId=${groupId}`,\n\t\tmethod: 'GET',\n\t});\n\tif (errors) {\n\t\tconsole.error(errors);\n\t\treturn [];\n\t}\n\n\treturn notifications;\n};\n","import * as React from 'react';\nimport { IoMdNotificationsOutline } from 'react-icons/io';\nimport { NotificationDropdownPosition, NotificationFragment, NotificationType } from '../interface';\nimport { getNotificationsByClientSecret } from '../lib/getNotifications';\n\nexport const NotificationMenu = ({\n\tclientSecret,\n\tposition = NotificationDropdownPosition.CENTER,\n\tisDarkMode = false,\n\tchildren,\n}: {\n\tclientSecret: string;\n\tposition?: NotificationDropdownPosition;\n\tisDarkMode?: boolean;\n\tchildren?: JSX.Element;\n}) => {\n\tconsole.log('rendering the test notification menu');\n\tconst [notifications, setNotifications] = React.useState<string[]>([]);\n\tconst [isOpen, setIsOpen] = React.useState(false);\n\n\tconst positionClass = (() => {\n\t\tswitch (position) {\n\t\t\tcase NotificationDropdownPosition.LEFT:\n\t\t\t\treturn 'left';\n\t\t\tcase NotificationDropdownPosition.CENTER:\n\t\t\t\treturn 'center';\n\t\t\tcase NotificationDropdownPosition.RIGHT:\n\t\t\t\treturn 'right';\n\t\t}\n\t})();\n\n\tReact.useEffect(() => {\n\t\t(async () => {\n\t\t\tconst notifications = await getNotificationsByClientSecret({ clientSecret });\n\n\t\t\tconsole.log({ notifications });\n\t\t\tsetNotifications(notifications);\n\t\t})();\n\t}, []);\n\n\treturn (\n\t\t<div className='notification-menu-wrapper'>\n\t\t\t{children ? (\n\t\t\t\tchildren\n\t\t\t) : (\n\t\t\t\t<NotificationIcon\n\t\t\t\t\tisDarkMode={isDarkMode}\n\t\t\t\t\thandleToggle={() => (isOpen ? setIsOpen(false) : setIsOpen(true))}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t{isOpen && (\n\t\t\t\t<div\n\t\t\t\t\tclassName={`notifications-wrapper notifications-wrapper-${positionClass} notifications-wrapper-${\n\t\t\t\t\t\tisDarkMode ? 'dark' : 'light'\n\t\t\t\t\t}`}\n\t\t\t\t>\n\t\t\t\t\t{notifications.map((notification: any) => (\n\t\t\t\t\t\t<div key={notification.id}>\n\t\t\t\t\t\t\t<SingleNotification\n\t\t\t\t\t\t\t\tisDarkMode={isDarkMode}\n\t\t\t\t\t\t\t\tnotification={notification}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nconst SingleNotification = ({\n\tnotification,\n\tisDarkMode,\n}: {\n\tnotification: NotificationFragment;\n\tisDarkMode: boolean;\n}) => {\n\tconst typeWrapperClass = (() => {\n\t\tconsole.log('type is', notification.type);\n\t\tswitch (notification.type) {\n\t\t\tcase NotificationType.INFO:\n\t\t\t\treturn 'info';\n\t\t\tcase NotificationType.SUCCESS:\n\t\t\t\treturn 'success';\n\t\t\tcase NotificationType.WARNING:\n\t\t\t\treturn 'warning';\n\t\t\tcase NotificationType.ERROR:\n\t\t\t\treturn 'error';\n\t\t}\n\t})();\n\n\tconst modeWrapperClass = isDarkMode ? 'dark' : 'light';\n\n\treturn (\n\t\t<div\n\t\t\tclassName={`single-notification-wrapper single-notification-wrapper-${modeWrapperClass}-${typeWrapperClass}`}\n\t\t>\n\t\t\t<p\n\t\t\t\tclassName={`single-notification-title single-notification-title-${modeWrapperClass}`}\n\t\t\t>\n\t\t\t\t{notification.title}\n\t\t\t</p>\n\t\t\t<p className={`single-notification-body single-notification-body-${modeWrapperClass}`}>\n\t\t\t\t{notification.body}\n\t\t\t</p>\n\t\t</div>\n\t);\n};\n\nconst NotificationIcon = ({\n\thandleToggle,\n\tisDarkMode,\n}: {\n\thandleToggle: () => void;\n\tisDarkMode: boolean;\n}) => {\n\treturn (\n\t\t<div\n\t\t\tclassName={`notification-icon-wrapper notification-icon-wrapper-${\n\t\t\t\tisDarkMode ? 'dark' : 'light'\n\t\t\t}`}\n\t\t\tonClick={handleToggle}\n\t\t>\n\t\t\t<IoMdNotificationsOutline className='bell-icon' />\n\t\t</div>\n\t);\n};\n","import { api_endpoint } from '../constants';\nimport { authenticate } from './authenticate';\nimport { authFetchUser } from './authFetch';\n\nexport const insertNotification = async ({\n\tapiKey,\n\ttitle,\n\tbody,\n\ttype,\n\tgroupId,\n}: {\n\tapiKey: string;\n\ttitle: string;\n\tbody: string;\n\ttype: string;\n\tgroupId: string;\n}) => {\n\tawait authenticate(apiKey);\n\tconst { notification, error } = await authFetchUser({\n\t\tendpoint: `${api_endpoint}/api/notification/insert-notification`,\n\t\tmethod: `POST`,\n\t\tbody: {\n\t\t\ttitle,\n\t\t\tbody,\n\t\t\ttype,\n\t\t\tgroupId,\n\t\t},\n\t});\n\n\tif (error) {\n\t\treturn null;\n\t}\n\n\treturn notification;\n};\n","import { getNotificationsByGroupId } from '../lib/getNotifications';\nimport { insertNotification } from '../lib/insertNotification';\n\nexport class Notifyr {\n\tprivate apiKey;\n\tconstructor(apiKey: string) {\n\t\tthis.apiKey = apiKey;\n\t}\n\n\tpublic async sendNotification({\n\t\ttitle,\n\t\tbody,\n\t\ttype,\n\t\tgroupId,\n\t}: {\n\t\ttitle: string;\n\t\tbody: string;\n\t\ttype: string;\n\t\tgroupId: string;\n\t}) {\n\t\tconst notification = await insertNotification({\n\t\t\tapiKey: this.apiKey,\n\t\t\ttitle,\n\t\t\tbody,\n\t\t\ttype,\n\t\t\tgroupId,\n\t\t});\n\t\treturn notification;\n\t}\n\n\tpublic async getNotificationsByGroupId({ groupId }: { groupId: string }) {\n\t\tconst notifications = await getNotificationsByGroupId({ apiKey: this.apiKey, groupId });\n\t\treturn notifications;\n\t}\n}\n"],"names":["React","IoMdNotificationsOutline"],"mappings":"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"}